{"ast":null,"code":"import { tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n    this.pokemonsUrl = 'api/pokemons';\n  }\n  // getPokemons(): Pokemon[]{\n  //     return POKEMONS\n  // }\n  log(log) {\n    console.log;\n  }\n  getPokemons() {\n    return this.http.get(this.pokemonsUrl).pipe(tap(_ => this.log('fetched pokemons')));\n  }\n  // getPokenons():Observable<any>{\n  //     return this.http.get(this.pokemonsUrl)\n  // }\n  //retourne le pokemon avec l'id passé en paramètre \n  getPokemon(id) {\n    let pokemons = this.getPokemons();\n    for (let i = 0; i < pokemons.length; i++) {\n      if (pokemons[i].id == id) {\n        return pokemons[i];\n      }\n    }\n    return 'false';\n  }\n  getPokemonTypes() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol'];\n  }\n}\nPokemonService.ɵfac = function PokemonService_Factory(t) {\n  return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n};\nPokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PokemonService,\n  factory: PokemonService.ɵfac\n});","map":{"version":3,"mappings":"AAQA,SAAoBA,GAAG,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,cAAc;EACvBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAEhB,gBAAW,GAAG,cAAc;EAFC;EAKrC;EACA;EACA;EACQC,GAAG,CAACA,GAAW;IACnBC,OAAO,CAACD,GAAG;EACf;EAEAE,WAAW;IAEP,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAY,IAAI,CAACC,WAAW,CAAC,CAACC,IAAI,CAClDT,GAAG,CAACU,CAAC,IAAG,IAAI,CAACN,GAAG,CAAC,kBAAkB,CAAC,CAAC,CACxC;EACL;EAEA;EACA;EACA;EAIA;EACAO,UAAU,CAACC,EAAU;IACjB,IAAIC,QAAQ,GAAG,IAAI,CAACP,WAAW,EAAE;IACjC,KAAI,IAAIQ,CAAC,GAAE,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAC;MACnC,IAAGD,QAAQ,CAACC,CAAC,CAAC,CAACF,EAAE,IAAIA,EAAE,EAAC;QACpB,OAAOC,QAAQ,CAACC,CAAC,CAAC;;;IAI1B,OAAO,OAAO;EAClB;EAEAE,eAAe;IACX,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC;EAC5F;;AAxCSf,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;AAAA","names":["tap","PokemonService","constructor","http","log","console","getPokemons","get","pokemonsUrl","pipe","_","getPokemon","id","pokemons","i","length","getPokemonTypes","factory"],"sourceRoot":"","sources":["/Users/kseyo/Desktop/pokemon/STARTCODE/src/app/pokemon.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Pokemon } from \"./pokemons/donnees-pokemons/pokemon\";\nimport { POKEMONS } from \"./pokemons/donnees-pokemons/mock-pokemon\";\n\n\nimport { HttpClient,HttpHeaders} from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { of } from \"rxjs\";\nimport { catchError,tap } from \"rxjs\";\nimport { subscriptionLogsToBeFn } from \"rxjs/internal/testing/TestScheduler\";\n\n\n@Injectable()\n    export class PokemonService {\n        constructor(private http:HttpClient){}\n\n        private pokemonsUrl = 'api/pokemons';\n\n\n        // getPokemons(): Pokemon[]{\n        //     return POKEMONS\n        // }\n        private log(log: string){\n            console.log\n        }\n\n        getPokemons(): Observable<Pokemon[]>{\n\n            return this.http.get<Pokemon[]>(this.pokemonsUrl).pipe(\n                tap(_=> this.log('fetched pokemons'))\n            );\n        }\n\n        // getPokenons():Observable<any>{\n        //     return this.http.get(this.pokemonsUrl)\n        // }\n\n\n\n        //retourne le pokemon avec l'id passé en paramètre \n        getPokemon(id: number){\n            let pokemons = this.getPokemons()\n            for(let i =0; i < pokemons.length; i++){\n                if(pokemons[i].id == id){\n                    return pokemons[i]\n                }\n            }\n\n            return 'false'\n        }\n\n        getPokemonTypes(): string[]{\n            return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol'];\n        }\n    }\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}