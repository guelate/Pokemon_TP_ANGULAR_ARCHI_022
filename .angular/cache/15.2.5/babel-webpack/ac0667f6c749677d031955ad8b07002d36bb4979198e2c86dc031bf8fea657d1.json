{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    let url = state.url;\n    return this.checkLogin(url);\n  }\n  checkLogin(url) {\n    const isLoggedIn = localStorage.getItem('isLogged') === 'true';\n    if (isLoggedIn) {\n      if (url === '/login') {\n        return this.router.parseUrl('/pokemon/all');\n      } else {\n        return true;\n      }\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAaA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAAW;EAEvEC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAE1B,IAAIC,GAAG,GAAWD,KAAK,CAACC,GAAG;IAE3B,OAAO,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC;EAC7B;EAEAC,UAAU,CAACD,GAAW;IACpB,MAAME,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IAE9D,IAAIF,UAAU,EAAE;MACd,IAAIF,GAAG,KAAK,QAAQ,EAAE;QACpB,OAAO,IAAI,CAACJ,MAAM,CAACS,QAAQ,CAAC,cAAc,CAAC;OAC5C,MAAM;QACL,OAAO,IAAI;;KAEd,MAAM;MACL,OAAO,IAAI,CAACT,MAAM,CAACS,QAAQ,CAAC,QAAQ,CAAC;;EAEzC;;AAxBWZ,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAa,SAATb,SAAS;EAAAc,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","next","state","url","checkLogin","isLoggedIn","localStorage","getItem","parseUrl","factory","providedIn"],"sourceRoot":"","sources":["/Users/kseyo/Desktop/STARTCODE_GUELATE_KILLIAN/src/app/auth/auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean | UrlTree {\n    let url: string = state.url;\n\n    return this.checkLogin(url);\n  }\n\n  checkLogin(url: string): boolean | UrlTree {\n    const isLoggedIn = localStorage.getItem('isLogged') === 'true';\n\n    if (isLoggedIn) {\n      if (url === '/login') {\n        return this.router.parseUrl('/pokemon/all');\n      } else {\n        return true;\n      }\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}