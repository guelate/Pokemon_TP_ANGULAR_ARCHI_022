{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    let url = state.url;\n    return this.checkLogin(url);\n  }\n  checkLogin(url) {\n    let val = localStorage.getItem('isUserLoggedIn');\n    if (val != null && val == \"true\") {\n      if (url == \"/login\") this.router.parseUrl('/pokemon/all');else return true;\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAuBA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,gBAAW,GAAXD,WAAW;IAAuB,WAAM,GAANC,MAAM;EAC5D;EAEAC,WAAW,CACTC,IAA4B,EAC5BC,KAA0B;IAC1B,IAAIC,GAAG,GAAWD,KAAK,CAACC,GAAG;IAE3B,OAAO,IAAI,CAACC,UAAU,CAACD,GAAG,CAAC;EAC7B;EAEAC,UAAU,CAACD,GAAW;IACpB,IAAIE,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAEhD,IAAIF,GAAG,IAAI,IAAI,IAAIA,GAAG,IAAI,MAAM,EAAE;MAChC,IAAIF,GAAG,IAAI,QAAQ,EACjB,IAAI,CAACJ,MAAM,CAACS,QAAQ,CAAC,cAAc,CAAC,CAAC,KAErC,OAAO,IAAI;KACd,MAAM;MACL,OAAO,IAAI,CAACT,MAAM,CAACS,QAAQ,CAAC,QAAQ,CAAC;;EAEzC;;AAvBWZ,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAa,SAATb,SAAS;EAAAc,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","canActivate","next","state","url","checkLogin","val","localStorage","getItem","parseUrl","factory","providedIn"],"sourceRoot":"","sources":["/Users/kseyo/Desktop/pokemon/STARTCODE/src/app/auth/auth.guard.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\n// import { Observable } from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthGuard implements CanActivate {\n//   canActivate(\n//     route: ActivatedRouteSnapshot,\n//     state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n//     return true;\n//   }\n  \n// }\n\nimport {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\nimport {AuthService} from \"./auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {\n  }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean | UrlTree {\n    let url: string = state.url;\n\n    return this.checkLogin(url);\n  }\n\n  checkLogin(url: string): any {\n    let val = localStorage.getItem('isUserLoggedIn');\n\n    if (val != null && val == \"true\") {\n      if (url == \"/login\")\n        this.router.parseUrl('/pokemon/all');\n      else\n        return true;\n    } else {\n      return this.router.parseUrl('/login');\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}