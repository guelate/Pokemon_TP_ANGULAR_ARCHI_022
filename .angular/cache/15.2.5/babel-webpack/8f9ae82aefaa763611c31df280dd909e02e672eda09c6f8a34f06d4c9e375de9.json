{"ast":null,"code":"import { of } from 'rxjs';\nimport { tap, delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.isLogged = false;\n  }\n  login(userName, password) {\n    const isAuthenticated = userName === 'Guelate' && password === 'admin';\n    console.log(`Authentication success: ${isAuthenticated}`);\n    localStorage.setItem('isLogged', isAuthenticated ? 'true' : 'false');\n    return of(isAuthenticated).pipe(delay(100), tap(val => console.log(`Authentication success: ${val}`)));\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)();\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,EAAE,QAAQ,MAAM;AACrC,SAASC,GAAG,EAAEC,KAAK,QAAQ,gBAAgB;;AAK3C,OAAM,MAAOC,WAAW;EAHxBC;IAIE,aAAQ,GAAY,KAAK;;EACzBC,KAAK,CAACC,QAAiB,EAAEC,QAAiB;IACxC,MAAMC,eAAe,GAAGF,QAAQ,KAAK,SAAS,IAAIC,QAAQ,KAAK,OAAO;IACtEE,OAAO,CAACC,GAAG,CAAC,2BAA2BF,eAAe,EAAE,CAAC;IAEzDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEJ,eAAe,GAAG,MAAM,GAAG,OAAO,CAAC;IAEpE,OAAOR,EAAE,CAACQ,eAAe,CAAC,CAACK,IAAI,CAC7BX,KAAK,CAAC,GAAG,CAAC,EACVD,GAAG,CAAEa,GAAG,IAAKL,OAAO,CAACC,GAAG,CAAC,2BAA2BI,GAAG,EAAE,CAAC,CAAC,CAC5D;EACH;;AAZWX,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["of","tap","delay","AuthService","constructor","login","userName","password","isAuthenticated","console","log","localStorage","setItem","pipe","val","factory","providedIn"],"sourceRoot":"","sources":["/Users/kseyo/Desktop/STARTCODE_GUELATE_KILLIAN_TP_ARCHI022/src/app/auth/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { tap, delay } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  isLogged: boolean = false;\n  login(userName?: string, password?: string): Observable<boolean> {\n    const isAuthenticated = userName === 'Guelate' && password === 'admin';\n    console.log(`Authentication success: ${isAuthenticated}`);\n\n    localStorage.setItem('isLogged', isAuthenticated ? 'true' : 'false');\n\n    return of(isAuthenticated).pipe(\n      delay(100),\n      tap((val) => console.log(`Authentication success: ${val}`))\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}