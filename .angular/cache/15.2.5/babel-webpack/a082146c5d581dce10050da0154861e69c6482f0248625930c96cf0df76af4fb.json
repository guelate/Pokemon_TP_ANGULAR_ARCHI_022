{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet FormPokemonComponent = class FormPokemonComponent {\n  constructor(router, pokemonsService) {\n    this.router = router;\n    this.pokemonsService = pokemonsService;\n    this.types = [];\n  }\n  ngOnInit() {\n    this.types = this.getPokemonTypes();\n  }\n  getPokemonTypes() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol'];\n  }\n  //determine si le type est passé en paramètres appartient ou non  en cours d'edition\n  hasType(type) {\n    let index = this.pokemon.types.indexOf(type);\n    if (index > -1) {\n      return true;\n    }\n    return false;\n  }\n  //methode appele lorsque l'utilisateur ajout ou retire au type au pokemon en cours d'edition\n  selectType($event, type) {\n    let checked = $event.target.checked;\n    if (checked) {\n      this.pokemon.types.push(type);\n    } else {\n      let index = this.pokemon.types.indexOf(type);\n      if (index > -1) {\n        this.pokemon.types.slice(index, 1);\n      }\n    }\n  }\n  //valid le nb de type pour chaque pokemon\n  isTypesValid(type) {\n    if (this.pokemon.types.lenght === 1 && this.hasType(type)) {\n      return false;\n    }\n    if (this.pokemon.types.lenght >= 3 && !this.hasType(type)) {\n      return false;\n    }\n    return true;\n  }\n  onSubmit() {\n    let link = ['/pokemon', this.pokemon.id];\n    this.pokemonsService.addTypePokemon(this.pokemon).subscribe(p => console.log(p));\n    this.router.navigate(link);\n  }\n  goDetail(pokemon) {\n    let link = ['/pokemon', pokemon.id];\n    this.router.navigate(link);\n  }\n};\n__decorate([Input()], FormPokemonComponent.prototype, \"pokemon\", void 0);\nFormPokemonComponent = __decorate([Component({\n  selector: 'form-pokemon',\n  templateUrl: './form-pokemon.component.html'\n})], FormPokemonComponent);\nexport { FormPokemonComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAUC,KAAK,QAAQ,eAAe;AASjD,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAI/BC,YAAoBC,MAAc,EAAUC,eAA+B;IAAvD,WAAM,GAAND,MAAM;IAAkB,oBAAe,GAAfC,eAAe;IAD3D,UAAK,GAAQ,EAAE;EAC+D;EAE9EC,QAAQ;IACN,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,eAAe,EAAE;EACrC;EAEAA,eAAe;IACb,OAAO,CACL,QAAQ,EACR,KAAK,EACL,KAAK,EACL,SAAS,EACT,QAAQ,EACR,UAAU,EACV,QAAQ,EACR,KAAK,EACL,KAAK,CACN;EACH;EAEA;EACAC,OAAO,CAACC,IAAY;IAClB,IAAIC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACL,KAAK,CAACM,OAAO,CAACH,IAAI,CAAC;IAC5C,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE;MACd,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;EAEA;EACAG,UAAU,CAACC,MAAW,EAAEL,IAAY;IAClC,IAAIM,OAAO,GAAGD,MAAM,CAACE,MAAM,CAACD,OAAO;IACnC,IAAIA,OAAO,EAAE;MACX,IAAI,CAACJ,OAAO,CAACL,KAAK,CAACW,IAAI,CAACR,IAAI,CAAC;KAC9B,MAAM;MACL,IAAIC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACL,KAAK,CAACM,OAAO,CAACH,IAAI,CAAC;MAC5C,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE;QACd,IAAI,CAACC,OAAO,CAACL,KAAK,CAACY,KAAK,CAACR,KAAK,EAAE,CAAC,CAAC;;;EAGxC;EACA;EACAS,YAAY,CAACV,IAAY;IACvB,IAAI,IAAI,CAACE,OAAO,CAACL,KAAK,CAACc,MAAM,KAAK,CAAC,IAAI,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC,EAAE;MACzD,OAAO,KAAK;;IAGd,IAAI,IAAI,CAACE,OAAO,CAACL,KAAK,CAACc,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC,EAAE;MACzD,OAAO,KAAK;;IAGd,OAAO,IAAI;EACb;EAEAY,QAAQ;IACN,IAAIC,IAAI,GAAG,CAAC,UAAU,EAAE,IAAI,CAACX,OAAO,CAACY,EAAE,CAAC;IACxC,IAAI,CAACnB,eAAe,CAACoB,cAAc,CAAC,IAAI,CAACb,OAAO,CAAC,CAACc,SAAS,CAAEC,CAAC,IAAKC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC,CAAC;IAClF,IAAI,CAACvB,MAAM,CAAC0B,QAAQ,CAACP,IAAI,CAAC;EAC5B;EAEAQ,QAAQ,CAACnB,OAAgB;IACvB,IAAIW,IAAI,GAAG,CAAC,UAAU,EAAEX,OAAO,CAACY,EAAE,CAAC;IACnC,IAAI,CAACpB,MAAM,CAAC0B,QAAQ,CAACP,IAAI,CAAC;EAC5B;CACD;AAnEUS,YAAR/B,KAAK,EAAE,qDAAc;AADXC,oBAAoB,eAJhCF,SAAS,CAAC;EACTiC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE;CACd,CAAC,GACWhC,oBAAoB,CAoEhC;SApEYA,oBAAoB","names":["Component","Input","FormPokemonComponent","constructor","router","pokemonsService","ngOnInit","types","getPokemonTypes","hasType","type","index","pokemon","indexOf","selectType","$event","checked","target","push","slice","isTypesValid","lenght","onSubmit","link","id","addTypePokemon","subscribe","p","console","log","navigate","goDetail","__decorate","selector","templateUrl"],"sourceRoot":"","sources":["/Users/kseyo/Desktop/pokemon/STARTCODE/src/app/pokemons/edit-pokemon/form-pokemon.component.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Pokemon } from '../donnees-pokemons/pokemon';\nimport { PokemonService } from 'src/app/pokemon.service';\n\n@Component({\n  selector: 'form-pokemon',\n  templateUrl: './form-pokemon.component.html',\n})\nexport class FormPokemonComponent implements OnInit {\n  @Input() pokemon: any;\n\n  types: any = [];\n  constructor(private router: Router, private pokemonsService: PokemonService){ }\n\n  ngOnInit(): void {\n    this.types = this.getPokemonTypes();\n  }\n\n  getPokemonTypes(): string[] {\n    return [\n      'Plante',\n      'Feu',\n      'Eau',\n      'Insecte',\n      'Normal',\n      'Electrik',\n      'Poison',\n      'Fée',\n      'Vol',\n    ];\n  }\n\n  //determine si le type est passé en paramètres appartient ou non  en cours d'edition\n  hasType(type: string): boolean {\n    let index = this.pokemon.types.indexOf(type);\n    if (index > -1) {\n      return true;\n    }\n    return false;\n  }\n\n  //methode appele lorsque l'utilisateur ajout ou retire au type au pokemon en cours d'edition\n  selectType($event: any, type: string): void {\n    let checked = $event.target.checked;\n    if (checked) {\n      this.pokemon.types.push(type);\n    } else {\n      let index = this.pokemon.types.indexOf(type);\n      if (index > -1) {\n        this.pokemon.types.slice(index, 1);\n      }\n    }\n  }\n  //valid le nb de type pour chaque pokemon\n  isTypesValid(type: string): boolean {\n    if (this.pokemon.types.lenght === 1 && this.hasType(type)) {\n      return false;\n    }\n\n    if (this.pokemon.types.lenght >= 3 && !this.hasType(type)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onSubmit(): void {\n    let link = ['/pokemon', this.pokemon.id];\n    this.pokemonsService.addTypePokemon(this.pokemon).subscribe((p) => console.log(p));\n    this.router.navigate(link);\n  }\n\n  goDetail(pokemon: Pokemon) {\n    let link = ['/pokemon', pokemon.id];\n    this.router.navigate(link);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}