{"ast":null,"code":"import * as i0 from \"@angular/core\";\n/*\n * Exemple d'utilisation\n *   {{ pokemon.type | pokemonTypeColor }}\n */\nexport class PokemonTypeColorPipe {\n  transform(type) {\n    let color;\n    switch (type) {\n      case ['*']:\n        color = 'red lighten-1';\n        break;\n      case ['*', '*']:\n        color = 'blue lighten-1';\n        break;\n      case ['*']:\n        color = 'green lighten-1';\n        break;\n      default:\n        color = 'yellow';\n        break;\n    }\n    return 'chip ' + color;\n  }\n}\nPokemonTypeColorPipe.ɵfac = function PokemonTypeColorPipe_Factory(t) {\n  return new (t || PokemonTypeColorPipe)();\n};\nPokemonTypeColorPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"pokemonTypeColor\",\n  type: PokemonTypeColorPipe,\n  pure: true\n});","map":{"version":3,"mappings":";AAEA;;;;AAMA,OAAM,MAAOA,oBAAoB;EAC/BC,SAAS,CAACC,IAAc;IACtB,IAAIC,KAAa;IAEjB,QAAQD,IAAI;MACV,KAAK,CAAC,GAAG,CAAC;QACRC,KAAK,GAAG,eAAe;QACvB;MACF,KAAK,CAAC,GAAG,EAAC,GAAG,CAAC;QACZA,KAAK,GAAG,gBAAgB;QACxB;MACF,KAAK,CAAC,GAAG,CAAC;QACRA,KAAK,GAAG,iBAAiB;QACzB;MACF;QACEA,KAAK,GAAG,QAAQ;QAChB;IAAM;IAEV,OAAO,OAAO,GAAGA,KAAK;EACxB;;AAnBWH,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;;QAApBA,oBAAoB;EAAAI;AAAA","names":["PokemonTypeColorPipe","transform","type","color","pure"],"sourceRoot":"","sources":["/Users/kseyo/Desktop/pokemon/STARTCODE/src/app/pokemons/pipes/pokemon-type-color.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/*\r\n * Exemple d'utilisation\r\n *   {{ pokemon.type | pokemonTypeColor }}\r\n */\r\n\r\n@Pipe({ name: 'pokemonTypeColor' })\r\nexport class PokemonTypeColorPipe implements PipeTransform {\r\n  transform(type: string[]): string {\r\n    let color: string;\r\n\r\n    switch (type) {\r\n      case ['*']:\r\n        color = 'red lighten-1';\r\n        break;\r\n      case ['*','*']:\r\n        color = 'blue lighten-1';\r\n        break;\r\n      case ['*']:\r\n        color = 'green lighten-1';\r\n        break;\r\n      default:\r\n        color = 'yellow';\r\n        break;\r\n    }\r\n    return 'chip ' + color;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}