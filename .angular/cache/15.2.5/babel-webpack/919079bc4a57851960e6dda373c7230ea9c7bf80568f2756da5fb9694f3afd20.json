{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from \"@angular/core\";\nlet FormPokemonComponent = class FormPokemonComponent {\n  constructor(router) {\n    this.router = router;\n    this.types = [];\n  }\n  ngOnInit() {\n    this.types = this.getPokemonTypes();\n  }\n  getPokemonTypes() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol'];\n  }\n  //determine si le type est passé en paramètres appartient ou non  en cours d'edition\n  hasType(type) {\n    let index = this.pokemon.types.indexOf(type);\n    if (index > -1) {\n      return true;\n    }\n    return false;\n  }\n  //methode appele lorsque l'utilisateur ajout ou retire au type au pokemon en cours d'edition \n  selectType($event, type) {\n    let checked = $event.target.checked;\n    if (checked) {\n      this.pokemon.types.push(type);\n    } else {\n      let index = this.pokemon.types.indexOf(type);\n      if (index > -1) {\n        this.pokemon.types.slice(index, 1);\n      }\n    }\n  }\n  //valid le nb de type pour chaque pokemon \n  isTypesValid(type) {\n    if (this.pokemon.types.lenght === 1 && this.hasType(type)) {\n      return false;\n    }\n    if (this.pokemon.types.lenght >= 3 && !this.hasType(type)) {\n      return false;\n    }\n    return true;\n  }\n};\n__decorate([Input()], FormPokemonComponent.prototype, \"pokemon\", void 0);\nFormPokemonComponent = __decorate([Component({\n  selector: 'form-pokemon',\n  templateUrl: './form-pokemon.component.html'\n})], FormPokemonComponent);\nexport { FormPokemonComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAQC,KAAK,QAAQ,eAAe;AAM/C,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAK7BC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAD1B,UAAK,GAAQ,EAAE;EACqB;EAGpCC,QAAQ;IACJ,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,eAAe,EAAE;EACvC;EAEAA,eAAe;IACX,OAAO,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC;EAC5F;EAEA;EACAC,OAAO,CAACC,IAAY;IAChB,IAAIC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACL,KAAK,CAACM,OAAO,CAACH,IAAI,CAAC;IAC5C,IAAGC,KAAK,GAAG,CAAC,CAAC,EAAC;MACV,OAAO,IAAI;;IAEf,OAAO,KAAK;EAChB;EAEA;EACAG,UAAU,CAACC,MAAW,EAAEL,IAAW;IAC/B,IAAIM,OAAO,GAAGD,MAAM,CAACE,MAAM,CAACD,OAAO;IACnC,IAAGA,OAAO,EAAC;MACP,IAAI,CAACJ,OAAO,CAACL,KAAK,CAACW,IAAI,CAACR,IAAI,CAAC;KAChC,MAAI;MACD,IAAIC,KAAK,GAAG,IAAI,CAACC,OAAO,CAACL,KAAK,CAACM,OAAO,CAACH,IAAI,CAAC;MAC5C,IAAGC,KAAK,GAAG,CAAC,CAAC,EAAC;QACV,IAAI,CAACC,OAAO,CAACL,KAAK,CAACY,KAAK,CAACR,KAAK,EAAC,CAAC,CAAC;;;EAG7C;EACA;EACAS,YAAY,CAACV,IAAY;IAErB,IAAG,IAAI,CAACE,OAAO,CAACL,KAAK,CAACc,MAAM,KAAK,CAAC,IAAI,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC,EAAC;MACzD,OAAO,KAAK;;IAGhB,IAAG,IAAI,CAACE,OAAO,CAACL,KAAK,CAACc,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAACZ,OAAO,CAACC,IAAI,CAAC,EAAC;MACrD,OAAO,KAAK;;IAGhB,OAAO,IAAI;EACf;CACC;AAhDYY,YAARpB,KAAK,EAAE,qDAAa;AAFZC,oBAAoB,eAJhCF,SAAS,CAAC;EACPsB,QAAQ,EAAC,cAAc;EACvBC,WAAW,EAAC;CACf,CAAC,GACWrB,oBAAoB,CAkDhC;SAlDYA,oBAAoB","names":["Component","Input","FormPokemonComponent","constructor","router","ngOnInit","types","getPokemonTypes","hasType","type","index","pokemon","indexOf","selectType","$event","checked","target","push","slice","isTypesValid","lenght","__decorate","selector","templateUrl"],"sourceRoot":"","sources":["/Users/kseyo/Desktop/pokemon/STARTCODE/src/app/pokemons/edit-pokemon/form-pokemon.component.ts"],"sourcesContent":["import { Component,OnInit,Input } from \"@angular/core\";\nimport { ActivatedRoute,Router } from \"@angular/router\";\n@Component({\n    selector:'form-pokemon',\n    templateUrl:'./form-pokemon.component.html'\n})\nexport class FormPokemonComponent implements OnInit{\n\n    @Input() pokemon: any\n\n    types: any = [];\n    constructor(private router: Router){}\n\n\n    ngOnInit(): void {\n        this.types = this.getPokemonTypes();\n    }\n\n    getPokemonTypes(): string[]{\n        return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol'];\n    }\n\n    //determine si le type est passé en paramètres appartient ou non  en cours d'edition\n    hasType(type: string):boolean{\n        let index = this.pokemon.types.indexOf(type)\n        if(index > -1){\n            return true\n        }\n        return false\n    }\n\n    //methode appele lorsque l'utilisateur ajout ou retire au type au pokemon en cours d'edition \n    selectType($event: any, type:string): void{\n        let checked = $event.target.checked\n        if(checked){\n            this.pokemon.types.push(type)\n        }else{\n            let index = this.pokemon.types.indexOf(type)\n            if(index > -1){\n                this.pokemon.types.slice(index,1)\n            }\n        }\n    }\n    //valid le nb de type pour chaque pokemon \n    isTypesValid(type: string):boolean{\n\n        if(this.pokemon.types.lenght === 1 && this.hasType(type)){\n        return false;\n    }\n\n    if(this.pokemon.types.lenght >= 3 && !this.hasType(type)){\n        return false;\n    }\n\n    return true;\n}\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}