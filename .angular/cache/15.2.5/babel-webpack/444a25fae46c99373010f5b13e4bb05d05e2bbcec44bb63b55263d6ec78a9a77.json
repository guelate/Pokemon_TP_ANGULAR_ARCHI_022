{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../pipes/pokemon-type-color.pipe\";\nfunction FormPokemonComponent_p_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p\")(1, \"label\")(2, \"input\", 21);\n    i0.ɵɵlistener(\"change\", function FormPokemonComponent_p_27_Template_input_change_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const type_r5 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.selectType($event, type_r5));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\")(4, \"div\");\n    i0.ɵɵpipe(5, \"pokemonTypeColor\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const type_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"id\", type_r5);\n    i0.ɵɵproperty(\"value\", type_r5)(\"checked\", ctx_r4.hasType(type_r5))(\"disabled\", !ctx_r4.isTypesValid(type_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"for\", type_r5);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(i0.ɵɵpipeBind1(5, 9, type_r5));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(type_r5);\n  }\n}\nexport class FormPokemonComponent {\n  constructor(router) {\n    this.router = router;\n    this.types = [];\n  }\n  ngOnInit() {\n    this.types = this.getPokemonTypes();\n  }\n  getPokemonTypes() {\n    return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol'];\n  }\n  //determine si le type est passé en paramètres appartient ou non  en cours d'edition\n  hasType(type) {\n    let index = this.pokemon.types.indexOf(type);\n    if (index > -1) {\n      return true;\n    }\n    return false;\n  }\n  //methode appele lorsque l'utilisateur ajout ou retire au type au pokemon en cours d'edition \n  selectType($event, type) {\n    let checked = $event.target.checked;\n    if (checked) {\n      this.pokemon.types.push(type);\n    } else {\n      let index = this.pokemon.types.indexOf(type);\n      if (index > -1) {\n        this.pokemon.types.slice(index, 1);\n      }\n    }\n  }\n  //valid le nb de type pour chaque pokemon \n  isTypesValid(type) {\n    if (this.pokemon.types.lenght === 1 && this.hasType(type)) {\n      return false;\n    }\n    if (this.pokemon.types.lenght >= 3 && !this.hasType(type)) {\n      return false;\n    }\n    return true;\n  }\n  onSubmit() {\n    let link = ['./pokemon', this.pokemon.id];\n    this.router.navigate(link);\n  }\n}\nFormPokemonComponent.ɵfac = function FormPokemonComponent_Factory(t) {\n  return new (t || FormPokemonComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nFormPokemonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormPokemonComponent,\n  selectors: [[\"form-pokemon\"]],\n  inputs: {\n    pokemon: \"pokemon\"\n  },\n  decls: 32,\n  vars: 8,\n  consts: [[3, \"ngSubmit\"], [\"pokemonForm\", \"ngForm\"], [1, \"row\"], [1, \"col\", \"s8\", \"offset-s2\"], [1, \"card-panel\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", \"required\", \"\", \"pattern\", \"^[a-zA-Z\\u00E0\\u00E9\\u00E8\\u00E7]{1,25}$\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [1, \"card-panel\", \"red\", \"accent-1\", 3, \"hidden\"], [\"for\", \"hp\"], [\"type\", \"number\", \"name\", \"hp\", \"id\", \"hp\", \"required\", \"\", \"pattern\", \"^(?:[1-9]|[1-4][0-9]|50)$\", 3, \"ngModel\", \"ngModelChange\"], [\"hp\", \"ngModel\"], [\"for\", \"cp\"], [\"type\", \"number\", \"name\", \"cp\", \"id\", \"cp\", \"required\", \"\", \"pattern\", \"^(?:[1-9]|[1-4][0-9]|10)$\", 3, \"ngModel\", \"ngModelChange\"], [\"cp\", \"ngModel\"], [\"for\", \"type\"], [4, \"ngFor\", \"ngForOf\"], [1, \"divider\"], [1, \"section\", \"center\"], [\"type\", \"submit\", 1, \"waves-effect\", \"waves-light\", \"btn\", 3, \"disabled\"], [\"type\", \"checkbox\", 1, \"filled-in\", 3, \"id\", \"value\", \"checked\", \"disabled\", \"change\"]],\n  template: function FormPokemonComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0, 1);\n      i0.ɵɵlistener(\"ngSubmit\", function FormPokemonComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Nom\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 7, 8);\n      i0.ɵɵlistener(\"ngModelChange\", function FormPokemonComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.pokemon.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"div\", 9);\n      i0.ɵɵtext(11, \" Le nom du pokemon est requis (1-25) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"label\", 10);\n      i0.ɵɵtext(13, \"Point de vies \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 11, 12);\n      i0.ɵɵlistener(\"ngModelChange\", function FormPokemonComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.pokemon.hp = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 9);\n      i0.ɵɵtext(17, \" Les points de vie du pokemon sont requis(1-50) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"label\", 13);\n      i0.ɵɵtext(19, \"Attaque\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 14, 15);\n      i0.ɵɵlistener(\"ngModelChange\", function FormPokemonComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.pokemon.cp = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 9);\n      i0.ɵɵtext(23, \" Une attaque est requise (1-10) \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"form\", 5)(25, \"label\", 16);\n      i0.ɵɵtext(26, \"Types\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, FormPokemonComponent_p_27_Template, 7, 11, \"p\", 17);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"div\", 18);\n      i0.ɵɵelementStart(29, \"div\", 19)(30, \"button\", 20);\n      i0.ɵɵtext(31, \" Valider \");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n      const _r1 = i0.ɵɵreference(9);\n      const _r2 = i0.ɵɵreference(15);\n      const _r3 = i0.ɵɵreference(21);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.pokemon.name);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", _r1.valid || _r1.pristine);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.pokemon.hp);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", _r2.valid || _r2.pristine);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.pokemon.cp);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"hidden\", _r3.valid || _r3.pristine);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.types);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"disabled\", !_r0.form.valid);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.PatternValidator, i3.NgModel, i3.NgForm, i4.PokemonTypeColorPipe],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"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","names":["i0","FormPokemonComponent","constructor","router","ngOnInit","types","getPokemonTypes","hasType","type","index","pokemon","indexOf","selectType","$event","checked","target","push","slice","isTypesValid","lenght","onSubmit","link","id","navigate","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/kseyo/Desktop/pokemon/STARTCODE/src/app/pokemons/edit-pokemon/form-pokemon.component.html","/Users/kseyo/Desktop/pokemon/STARTCODE/src/app/pokemons/edit-pokemon/form-pokemon.component.ts"],"sourcesContent":["<form #pokemonForm=\"ngForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"row\">\n        <div class=\"col s8 offset-s2\">\n            <div class=\"card-panel\">\n                <!-- pokemon name -->\n                <div class=\"form-group\">\n                    <label for=\"name\">Nom</label>\n                    <input type=\"text\" name=\"name\" id=\"name\" required pattern=\"^[a-zA-Zàéèç]{1,25}$\"\n                    [(ngModel)]=\"pokemon.name\" #name=\"ngModel\"\n                    >\n                    <div [hidden]=\"name.valid || name.pristine\" class=\"card-panel red accent-1\">\n                        Le nom du pokemon est requis (1-25)\n                    </div>\n\n                    <label for=\"hp\">Point de vies </label>\n                    <input type=\"number\" name=\"hp\" id=\"hp\" required pattern=\"^(?:[1-9]|[1-4][0-9]|50)$\"\n                    [(ngModel)]=\"pokemon.hp\" #hp=\"ngModel\"\n                    >\n                    <div [hidden]=\"hp.valid || hp.pristine\" class=\"card-panel red accent-1\">\n                        Les points de vie du pokemon sont requis(1-50)\n                    </div>\n\n                    <label for=\"cp\">Attaque</label>\n                    <input type=\"number\" name=\"cp\" id=\"cp\" required pattern=\"^(?:[1-9]|[1-4][0-9]|10)$\"\n                    [(ngModel)]=\"pokemon.cp\" #cp=\"ngModel\"\n                    >\n                    <div [hidden]=\"cp.valid || cp.pristine\" class=\"card-panel red accent-1\">\n                        Une attaque est requise (1-10)\n                    </div>\n\n                    <form  class=\"form-group\">\n                        <label for=\"type\">Types</label>\n                        <p *ngFor=\"let type of types\">\n                            <label>\n                                <input type=\"checkbox\" id=\"{{type}}\" class=\"filled-in\"\n                                [value]=\"type\"\n                                [checked]=\"hasType(type)\"\n                                [disabled]=\"!isTypesValid(type)\"\n                                (change)=\"selectType($event, type)\">\n\n                                <span [attr.for]=\"type\">\n                                    <div class=\"{{type | pokemonTypeColor}}\">{{type}}</div>\n\n                                </span>\n                            </label>\n                        </p>\n                    </form>\n\n                    <div class=\"divider\"></div>\n                    <div class=\"section center\">\n                        <button type=\"submit\" class=\"waves-effect waves-light btn\" [disabled]=\"!pokemonForm.form.valid\">\n                            Valider\n                        </button>\n                    </div>\n\n\n                </div>\n            </div>\n        </div>\n    </div>\n\n</form>","import { Component,OnInit,Input } from \"@angular/core\";\nimport { ActivatedRoute,Router } from \"@angular/router\";\n@Component({\n    selector:'form-pokemon',\n    templateUrl:'./form-pokemon.component.html'\n})\nexport class FormPokemonComponent implements OnInit{\n\n    @Input() pokemon: any\n\n    types: any = [];\n    constructor(private router: Router){}\n\n\n    ngOnInit(): void {\n        this.types = this.getPokemonTypes();\n    }\n\n    getPokemonTypes(): string[]{\n        return ['Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik', 'Poison', 'Fée', 'Vol'];\n    }\n\n    //determine si le type est passé en paramètres appartient ou non  en cours d'edition\n    hasType(type: string):boolean{\n        let index = this.pokemon.types.indexOf(type)\n        if(index > -1){\n            return true\n        }\n        return false\n    }\n\n    //methode appele lorsque l'utilisateur ajout ou retire au type au pokemon en cours d'edition \n    selectType($event: any, type:string): void{\n        let checked = $event.target.checked\n        if(checked){\n            this.pokemon.types.push(type)\n        }else{\n            let index = this.pokemon.types.indexOf(type)\n            if(index > -1){\n                this.pokemon.types.slice(index,1)\n            }\n        }\n    }\n    //valid le nb de type pour chaque pokemon \n    isTypesValid(type: string):boolean{\n\n        if(this.pokemon.types.lenght === 1 && this.hasType(type)){\n        return false;\n    }\n\n    if(this.pokemon.types.lenght >= 3 && !this.hasType(type)){\n        return false;\n    }\n\n    return true;\n}\n\nonSubmit():void{\n    let link = ['./pokemon', this.pokemon.id]\n    this.router.navigate(link)\n}\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}